name: CI/CD Deploy to ECS Fargate
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  deploy:
    name: Build, Test und Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: AWS CLI konfigurieren
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: eu-central-1
      - name: Login bei Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
      - name: Docker Image bauen und zu ECR pushen
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: clipzy-app
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      - name: Neue Image-ID in ECS Task-Definition einf√ºgen
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: clipzy-app-container
          image: ${{ steps.ecr-login.outputs.registry }}/block-ninja-game:latest
      - name: ECS Service mit neuer Task-Definition aktualisieren
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: clipzy-app-service
          cluster: clipzy-app-cluster
          wait-for-service-stability: true